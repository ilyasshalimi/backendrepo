name: Project Build, Docker Push to ECR, and Deploy to EKS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du code source
      - uses: actions/checkout@v4

      # Étape 2 : Configuration de l'environnement JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Étape 3 : Construction du projet avec Maven
      - name: Build with Maven
        run: mvn clean install

      # Étape 4 : Configuration des informations d'identification AWS
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      # Étape 5 : Connexion à Amazon ECR
      - name: Log in to Amazon ECR
        env:
          ECR_REGISTRY: 108641306373.dkr.ecr.eu-west-3.amazonaws.com
        run: |
          aws ecr get-login-password --region eu-west-3 | docker login --username AWS --password-stdin $ECR_REGISTRY

      # Étape 6 : Construction et marquage de l'image Docker
      - name: Build Docker Image
        env:
          ECR_IMAGE_NAME: springapi
          ECR_REGISTRY: 108641306373.dkr.ecr.eu-west-3.amazonaws.com
        run: |
          docker build -t $ECR_IMAGE_NAME .
          docker tag springapi:latest 108641306373.dkr.ecr.eu-west-3.amazonaws.com/springapi:latest
      # Étape 7 : Push de l'image Docker vers Amazon ECR
      - name: Push Docker Image to ECR
        run: |
          docker push 108641306373.dkr.ecr.eu-west-3.amazonaws.com/springapi:latest

      # Étape 8 : Configuration de l'accès à EKS
      - name: Update kubeconfig for Amazon EKS
        run: |
          aws eks --region eu-west-3 update-kubeconfig --name spring-cluster

      # Étape 9 : Déployer sur EKS
      - name: Apply Kubernetes Manifest
        run: |
          kubectl apply -f k8s.yaml
